<?php
 class searchModelTest extends umiTestCase {private static $testFixtures = array();public static function searchModel() {return searchModel::getInstance();}public static function setUpBeforeClass() {self::searchModel()->truncate_index();$vacd150a6885f609532931d89844070b1 = self::createPageFixture(__CLASS__, 'content', '');$vacd150a6885f609532931d89844070b1->setName(__CLASS__ . ': Страница не в индексе');$vacd150a6885f609532931d89844070b1->setValue('is_unindexed', 1);$vacd150a6885f609532931d89844070b1->setValue('content', 'НеВИндексе');$vacd150a6885f609532931d89844070b1->commit();$v87da0c1d74d7335f83acb6f445b85a44 = self::createPageFixture(__CLASS__, 'content', '');$v87da0c1d74d7335f83acb6f445b85a44->setName(__CLASS__ . ': Страница с ожидаемым весом слов 2');$v87da0c1d74d7335f83acb6f445b85a44->setValue('content', 'Тестовое словосочетание, Тестовое словосочетание, на из под');$v87da0c1d74d7335f83acb6f445b85a44->commit();$vdc45392e1ce06fd88b3ddfd6097b165c = self::createPageFixture(__CLASS__, 'content', '');$vdc45392e1ce06fd88b3ddfd6097b165c->setValue('content', 'Тестовые словосочетания');$vdc45392e1ce06fd88b3ddfd6097b165c->setName(__CLASS__ . ': Страница с ожидаемым весом слов 1');$vdc45392e1ce06fd88b3ddfd6097b165c->commit();$ve70f6935e016a9688ee4aac0770d2c2d = self::createPageFixture(__CLASS__, 'content', '');$ve70f6935e016a9688ee4aac0770d2c2d->setValue('content', 'Тестовое словосочетание');$ve70f6935e016a9688ee4aac0770d2c2d->setValue('h1', 'Тестовое словосочетание');$ve70f6935e016a9688ee4aac0770d2c2d->setValue('title', 'Тестовое словосочетание');$ve70f6935e016a9688ee4aac0770d2c2d->setValue('meta_keywords', 'Тестовое словосочетание');$ve70f6935e016a9688ee4aac0770d2c2d->setValue('meta_descriptions', 'Тестовое словосочетание');$ve70f6935e016a9688ee4aac0770d2c2d->setValue('tags', 'Тестовое словосочетание');$ve70f6935e016a9688ee4aac0770d2c2d->setName(__CLASS__ . ': Страница с ожидаемым весом слов 20');$ve70f6935e016a9688ee4aac0770d2c2d->commit();self::$testFixtures = array($vacd150a6885f609532931d89844070b1, $v87da0c1d74d7335f83acb6f445b85a44, $vdc45392e1ce06fd88b3ddfd6097b165c, $ve70f6935e016a9688ee4aac0770d2c2d);}public static function tearDownAfterClass() {parent::tearDownAfterClass();}public function testValidInstance() {$this->assertInstanceOf('iSearchModel', self::searchModel());}public function testIndexWords() {$v6b0e852a75c7df2e71d825ff0b3e1f6c = array(    "под",    "словосочетание",    "словосочетания",    "тестовое",    "тестовые"   );sort($v6b0e852a75c7df2e71d825ff0b3e1f6c);$result = $this->queryResult('SELECT word FROM cms3_search_index_words');$v4dbdfdb5f7e507c8955733a7117cb0b3 = array();foreach ($result as $vf1965a857bc285d26fe22023aa5ab50d) {$v4dbdfdb5f7e507c8955733a7117cb0b3[] = $vf1965a857bc285d26fe22023aa5ab50d['word'];}$this->assertEquals($v6b0e852a75c7df2e71d825ff0b3e1f6c, $v4dbdfdb5f7e507c8955733a7117cb0b3, 'Проблема с индексацией');}public function testIndexPages() {$v2095ef595ca7725d6314002120972a48 = self::$testFixtures[1]->getId();$v04dbac8856e5a4f10e1486d1b3e601da = self::$testFixtures[2]->getId();$v600268ac8c643efd853a7fc65cdb99e3 = self::$testFixtures[3]->getId();$v6b0e852a75c7df2e71d825ff0b3e1f6c = <<<EOF
{$v2095ef595ca7725d6314002120972a48},1,под
{$v2095ef595ca7725d6314002120972a48},2,словосочетание
{$v2095ef595ca7725d6314002120972a48},2,тестовое
{$v04dbac8856e5a4f10e1486d1b3e601da},1,словосочетания
{$v04dbac8856e5a4f10e1486d1b3e601da},1,тестовые
{$v600268ac8c643efd853a7fc65cdb99e3},17,словосочетание
{$v600268ac8c643efd853a7fc65cdb99e3},17,тестовое
EOF;   $vac5c74b64b4b8352ef2f181affb5ac2a = <<<EOF
				SELECT si.rel_id, si.weight, w.word
				FROM cms3_search_index as si
					INNER JOIN cms3_search_index_words as w ON si.word_id = w.id
				ORDER BY si.rel_id, w.word

EOF;   $v26d59e24afcb9c11f03ffe8392b68734 = $this->queryResult($vac5c74b64b4b8352ef2f181affb5ac2a);$v4dbdfdb5f7e507c8955733a7117cb0b3 = array();foreach ($v26d59e24afcb9c11f03ffe8392b68734 as $vf1965a857bc285d26fe22023aa5ab50d) {$v4dbdfdb5f7e507c8955733a7117cb0b3[] = $vf1965a857bc285d26fe22023aa5ab50d['rel_id'] . "," . $vf1965a857bc285d26fe22023aa5ab50d['weight'] . "," . $vf1965a857bc285d26fe22023aa5ab50d['word'];}$v4dbdfdb5f7e507c8955733a7117cb0b3 = implode("\n", $v4dbdfdb5f7e507c8955733a7117cb0b3);$this->assertEquals($v6b0e852a75c7df2e71d825ff0b3e1f6c, $v4dbdfdb5f7e507c8955733a7117cb0b3, "Веса проиндексированных страниц не соответсвуют ожиданиям");}public function testRunSearch() {$this->assertEquals(array(), self::searchModel()->runSearch(''), 'Поиск по путой строке');$this->assertEquals(array(), self::searchModel()->runSearch('НеВИндексе'), "Страница не в индексе попала в результат поиска");$this->assertEquals(array(self::$testFixtures[1]->getId()), self::searchModel()->runSearch('тест под'), 'Поиск по сочетанию');$this->assertEquals(self::searchModel()->runSearch('Тест'), self::searchModel()->runSearch('тестовое'));$v6b0e852a75c7df2e71d825ff0b3e1f6c = array(self::$testFixtures[3]->getId(), self::$testFixtures[1]->getId(), self::$testFixtures[2]->getId());$this->assertEquals($v6b0e852a75c7df2e71d825ff0b3e1f6c, self::searchModel()->runSearch('тест'), 'Порядок вывода страниц по запросу "тест" не соответсвует ожиданиям');}}?>